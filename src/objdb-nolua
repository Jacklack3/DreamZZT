
//Generated on Fri Jun  1 23:11:38 EDT 2007 by sam 

int str_to_obj(std::string str) { 
  if(str == "") {
    return -1;
  } else if(str.find(ZZT_PLAYER_NAME) == 0) {
    return ZZT_PLAYER;
  } else if(str.find(ZZT_OBJECT_NAME) == 0) {
    return ZZT_OBJECT;
  } else if(str.find(ZZT_PASSAGE_NAME) == 0) {
    return ZZT_PASSAGE;
  } else if(str.find(ZZT_SLIDER_NS_NAME) == 0) {
    return ZZT_SLIDER_NS;
  } else if(str.find(ZZT_SLIDER_EW_NAME) == 0) {
    return ZZT_SLIDER_EW;
  } else if(str.find(ZZT_PUSHER_NAME) == 0) {
    return ZZT_PUSHER;
  } else if(str.find(ZZT_KEY_NAME) == 0) {
    return ZZT_KEY;
  } else if(str.find(ZZT_GEM_NAME) == 0) {
    return ZZT_GEM;
  } else if(str.find(ZZT_TORCH_NAME) == 0) {
    return ZZT_TORCH;
  } else if(str.find(ZZT_AMMO_NAME) == 0) {
    return ZZT_AMMO;
  } else if(str.find(ZZT_SCROLL_NAME) == 0) {
    return ZZT_SCROLL;
  } else if(str.find(ZZT_ENERGIZER_NAME) == 0) {
    return ZZT_ENERGIZER;
  } else if(str.find(ZZT_DOOR_NAME) == 0) {
    return ZZT_DOOR;
  } else if(str.find(ZZT_CONVEYER_CW_NAME) == 0) {
    return ZZT_CONVEYER_CW;
  } else if(str.find(ZZT_CONVEYER_CCW_NAME) == 0) {
    return ZZT_CONVEYER_CCW;
  } else if(str.find(ZZT_BOMB_NAME) == 0) {
    return ZZT_BOMB;
  } else if(str.find(ZZT_EXPLOSION_NAME) == 0) {
    return ZZT_EXPLOSION;
  } else if(str.find(ZZT_BULLET_NAME) == 0) {
    return ZZT_BULLET;
  } else if(str.find(ZZT_DUPLICATOR_NAME) == 0) {
    return ZZT_DUPLICATOR;
  } else if(str.find(ZZT_TRANSPORTER_NAME) == 0) {
    return ZZT_TRANSPORTER;
  } else if(str.find(ZZT_BOULDER_NAME) == 0) {
    return ZZT_BOULDER;
  } else if(str.find(ZZT_EMPTY_NAME) == 0) {
    return ZZT_EMPTY;
  } else if(str.find(ZZT_BREAKABLE_NAME) == 0) {
    return ZZT_BREAKABLE;
  } else if(str.find(ZZT_LINE_NAME) == 0) {
    return ZZT_LINE;
  } else if(str.find(ZZT_SOLID_NAME) == 0) {
    return ZZT_SOLID;
  } else if(str.find(ZZT_NORMAL_NAME) == 0) {
    return ZZT_NORMAL;
  } else if(str.find(ZZT_FAKE_NAME) == 0) {
    return ZZT_FAKE;
  } else if(str.find(ZZT_FOREST_NAME) == 0) {
    return ZZT_FOREST;
  } else if(str.find(ZZT_INVISIBLE_NAME) == 0) {
    return ZZT_INVISIBLE;
  } else if(str.find(ZZT_WATER_NAME) == 0) {
    return ZZT_WATER;
  } else if(str.find(ZZT_BLINK_NAME) == 0) {
    return ZZT_BLINK;
  } else if(str.find(ZZT_HORIZONTAL_BLINK_NAME) == 0) {
    return ZZT_HORIZONTAL_BLINK;
  } else if(str.find(ZZT_VERTICAL_BLINK_NAME) == 0) {
    return ZZT_VERTICAL_BLINK;
  } else if(str.find(ZZT_BLUE_TEXT_NAME) == 0) {
    return ZZT_BLUE_TEXT;
  } else if(str.find(ZZT_GREEN_TEXT_NAME) == 0) {
    return ZZT_GREEN_TEXT;
  } else if(str.find(ZZT_CYAN_TEXT_NAME) == 0) {
    return ZZT_CYAN_TEXT;
  } else if(str.find(ZZT_RED_TEXT_NAME) == 0) {
    return ZZT_RED_TEXT;
  } else if(str.find(ZZT_PURPLE_TEXT_NAME) == 0) {
    return ZZT_PURPLE_TEXT;
  } else if(str.find(ZZT_YELLOW_TEXT_NAME) == 0) {
    return ZZT_YELLOW_TEXT;
  } else if(str.find(ZZT_WHITE_TEXT_NAME) == 0) {
    return ZZT_WHITE_TEXT;
  } else if(str.find(ZZT_LION_NAME) == 0) {
    return ZZT_LION;
  } else if(str.find(ZZT_SHARK_NAME) == 0) {
    return ZZT_SHARK;
  } else if(str.find(ZZT_BEAR_NAME) == 0) {
    return ZZT_BEAR;
  } else if(str.find(ZZT_RUFFIAN_NAME) == 0) {
    return ZZT_RUFFIAN;
  } else if(str.find(ZZT_TIGER_NAME) == 0) {
    return ZZT_TIGER;
  } else if(str.find(ZZT_SPINNING_GUN_NAME) == 0) {
    return ZZT_SPINNING_GUN;
  } else if(str.find(ZZT_CENTIPEDE_HEAD_NAME) == 0) {
    return ZZT_CENTIPEDE_HEAD;
  } else if(str.find(ZZT_CENTIPEDE_BODY_NAME) == 0) {
    return ZZT_CENTIPEDE_BODY;
  } else {
    return -1;
  }
}

ZZTObject *create_object(int type, int x, int y) {
  if(type == -1) {
    return NULL;

  } else if(type == ZZT_PLAYER) {
    return new ZZT_PLAYER_CLASS(type, x, y, ZZT_PLAYER_SHAPE, ZZT_PLAYER_FLAGS, ZZT_PLAYER_NAME);
  } else if(type == ZZT_OBJECT) {
    return new ZZT_OBJECT_CLASS(type, x, y, ZZT_OBJECT_SHAPE, ZZT_OBJECT_FLAGS, ZZT_OBJECT_NAME);
  } else if(type == ZZT_PASSAGE) {
    return new ZZT_PASSAGE_CLASS(type, x, y, ZZT_PASSAGE_SHAPE, ZZT_PASSAGE_FLAGS, ZZT_PASSAGE_NAME);
  } else if(type == ZZT_SLIDER_NS) {
    return new ZZT_SLIDER_NS_CLASS(type, x, y, ZZT_SLIDER_NS_SHAPE, ZZT_SLIDER_NS_FLAGS, ZZT_SLIDER_NS_NAME);
  } else if(type == ZZT_SLIDER_EW) {
    return new ZZT_SLIDER_EW_CLASS(type, x, y, ZZT_SLIDER_EW_SHAPE, ZZT_SLIDER_EW_FLAGS, ZZT_SLIDER_EW_NAME);
  } else if(type == ZZT_PUSHER) {
    return new ZZT_PUSHER_CLASS(type, x, y, ZZT_PUSHER_SHAPE, ZZT_PUSHER_FLAGS, ZZT_PUSHER_NAME);
  } else if(type == ZZT_KEY) {
    return new ZZT_KEY_CLASS(type, x, y, ZZT_KEY_SHAPE, ZZT_KEY_FLAGS, ZZT_KEY_NAME);
  } else if(type == ZZT_GEM) {
    return new ZZT_GEM_CLASS(type, x, y, ZZT_GEM_SHAPE, ZZT_GEM_FLAGS, ZZT_GEM_NAME);
  } else if(type == ZZT_TORCH) {
    return new ZZT_TORCH_CLASS(type, x, y, ZZT_TORCH_SHAPE, ZZT_TORCH_FLAGS, ZZT_TORCH_NAME);
  } else if(type == ZZT_AMMO) {
    return new ZZT_AMMO_CLASS(type, x, y, ZZT_AMMO_SHAPE, ZZT_AMMO_FLAGS, ZZT_AMMO_NAME);
  } else if(type == ZZT_SCROLL) {
    return new ZZT_SCROLL_CLASS(type, x, y, ZZT_SCROLL_SHAPE, ZZT_SCROLL_FLAGS, ZZT_SCROLL_NAME);
  } else if(type == ZZT_ENERGIZER) {
    return new ZZT_ENERGIZER_CLASS(type, x, y, ZZT_ENERGIZER_SHAPE, ZZT_ENERGIZER_FLAGS, ZZT_ENERGIZER_NAME);
  } else if(type == ZZT_DOOR) {
    return new ZZT_DOOR_CLASS(type, x, y, ZZT_DOOR_SHAPE, ZZT_DOOR_FLAGS, ZZT_DOOR_NAME);
  } else if(type == ZZT_CONVEYER_CW) {
    return new ZZT_CONVEYER_CW_CLASS(type, x, y, ZZT_CONVEYER_CW_SHAPE, ZZT_CONVEYER_CW_FLAGS, ZZT_CONVEYER_CW_NAME);
  } else if(type == ZZT_CONVEYER_CCW) {
    return new ZZT_CONVEYER_CCW_CLASS(type, x, y, ZZT_CONVEYER_CCW_SHAPE, ZZT_CONVEYER_CCW_FLAGS, ZZT_CONVEYER_CCW_NAME);
  } else if(type == ZZT_BOMB) {
    return new ZZT_BOMB_CLASS(type, x, y, ZZT_BOMB_SHAPE, ZZT_BOMB_FLAGS, ZZT_BOMB_NAME);
  } else if(type == ZZT_EXPLOSION) {
    return new ZZT_EXPLOSION_CLASS(type, x, y, ZZT_EXPLOSION_SHAPE, ZZT_EXPLOSION_FLAGS, ZZT_EXPLOSION_NAME);
  } else if(type == ZZT_BULLET) {
    return new ZZT_BULLET_CLASS(type, x, y, ZZT_BULLET_SHAPE, ZZT_BULLET_FLAGS, ZZT_BULLET_NAME);
  } else if(type == ZZT_DUPLICATOR) {
    return new ZZT_DUPLICATOR_CLASS(type, x, y, ZZT_DUPLICATOR_SHAPE, ZZT_DUPLICATOR_FLAGS, ZZT_DUPLICATOR_NAME);
  } else if(type == ZZT_TRANSPORTER) {
    return new ZZT_TRANSPORTER_CLASS(type, x, y, ZZT_TRANSPORTER_SHAPE, ZZT_TRANSPORTER_FLAGS, ZZT_TRANSPORTER_NAME);
  } else if(type == ZZT_BOULDER) {
    return new ZZT_BOULDER_CLASS(type, x, y, ZZT_BOULDER_SHAPE, ZZT_BOULDER_FLAGS, ZZT_BOULDER_NAME);
  } else if(type == ZZT_EMPTY) {
    return new ZZT_EMPTY_CLASS(type, x, y, ZZT_EMPTY_SHAPE, ZZT_EMPTY_FLAGS, ZZT_EMPTY_NAME);
  } else if(type == ZZT_BREAKABLE) {
    return new ZZT_BREAKABLE_CLASS(type, x, y, ZZT_BREAKABLE_SHAPE, ZZT_BREAKABLE_FLAGS, ZZT_BREAKABLE_NAME);
  } else if(type == ZZT_LINE) {
    return new ZZT_LINE_CLASS(type, x, y, ZZT_LINE_SHAPE, ZZT_LINE_FLAGS, ZZT_LINE_NAME);
  } else if(type == ZZT_SOLID) {
    return new ZZT_SOLID_CLASS(type, x, y, ZZT_SOLID_SHAPE, ZZT_SOLID_FLAGS, ZZT_SOLID_NAME);
  } else if(type == ZZT_NORMAL) {
    return new ZZT_NORMAL_CLASS(type, x, y, ZZT_NORMAL_SHAPE, ZZT_NORMAL_FLAGS, ZZT_NORMAL_NAME);
  } else if(type == ZZT_FAKE) {
    return new ZZT_FAKE_CLASS(type, x, y, ZZT_FAKE_SHAPE, ZZT_FAKE_FLAGS, ZZT_FAKE_NAME);
  } else if(type == ZZT_FOREST) {
    return new ZZT_FOREST_CLASS(type, x, y, ZZT_FOREST_SHAPE, ZZT_FOREST_FLAGS, ZZT_FOREST_NAME);
  } else if(type == ZZT_INVISIBLE) {
    return new ZZT_INVISIBLE_CLASS(type, x, y, ZZT_INVISIBLE_SHAPE, ZZT_INVISIBLE_FLAGS, ZZT_INVISIBLE_NAME);
  } else if(type == ZZT_WATER) {
    return new ZZT_WATER_CLASS(type, x, y, ZZT_WATER_SHAPE, ZZT_WATER_FLAGS, ZZT_WATER_NAME);
  } else if(type == ZZT_BLINK) {
    return new ZZT_BLINK_CLASS(type, x, y, ZZT_BLINK_SHAPE, ZZT_BLINK_FLAGS, ZZT_BLINK_NAME);
  } else if(type == ZZT_HORIZONTAL_BLINK) {
    return new ZZT_HORIZONTAL_BLINK_CLASS(type, x, y, ZZT_HORIZONTAL_BLINK_SHAPE, ZZT_HORIZONTAL_BLINK_FLAGS, ZZT_HORIZONTAL_BLINK_NAME);
  } else if(type == ZZT_VERTICAL_BLINK) {
    return new ZZT_VERTICAL_BLINK_CLASS(type, x, y, ZZT_VERTICAL_BLINK_SHAPE, ZZT_VERTICAL_BLINK_FLAGS, ZZT_VERTICAL_BLINK_NAME);
  } else if(type == ZZT_BLUE_TEXT) {
    return new ZZT_BLUE_TEXT_CLASS(type, x, y, ZZT_BLUE_TEXT_SHAPE, ZZT_BLUE_TEXT_FLAGS, ZZT_BLUE_TEXT_NAME);
  } else if(type == ZZT_GREEN_TEXT) {
    return new ZZT_GREEN_TEXT_CLASS(type, x, y, ZZT_GREEN_TEXT_SHAPE, ZZT_GREEN_TEXT_FLAGS, ZZT_GREEN_TEXT_NAME);
  } else if(type == ZZT_CYAN_TEXT) {
    return new ZZT_CYAN_TEXT_CLASS(type, x, y, ZZT_CYAN_TEXT_SHAPE, ZZT_CYAN_TEXT_FLAGS, ZZT_CYAN_TEXT_NAME);
  } else if(type == ZZT_RED_TEXT) {
    return new ZZT_RED_TEXT_CLASS(type, x, y, ZZT_RED_TEXT_SHAPE, ZZT_RED_TEXT_FLAGS, ZZT_RED_TEXT_NAME);
  } else if(type == ZZT_PURPLE_TEXT) {
    return new ZZT_PURPLE_TEXT_CLASS(type, x, y, ZZT_PURPLE_TEXT_SHAPE, ZZT_PURPLE_TEXT_FLAGS, ZZT_PURPLE_TEXT_NAME);
  } else if(type == ZZT_YELLOW_TEXT) {
    return new ZZT_YELLOW_TEXT_CLASS(type, x, y, ZZT_YELLOW_TEXT_SHAPE, ZZT_YELLOW_TEXT_FLAGS, ZZT_YELLOW_TEXT_NAME);
  } else if(type == ZZT_WHITE_TEXT) {
    return new ZZT_WHITE_TEXT_CLASS(type, x, y, ZZT_WHITE_TEXT_SHAPE, ZZT_WHITE_TEXT_FLAGS, ZZT_WHITE_TEXT_NAME);
  } else if(type == ZZT_LION) {
    return new ZZT_LION_CLASS(type, x, y, ZZT_LION_SHAPE, ZZT_LION_FLAGS, ZZT_LION_NAME);
  } else if(type == ZZT_SHARK) {
    return new ZZT_SHARK_CLASS(type, x, y, ZZT_SHARK_SHAPE, ZZT_SHARK_FLAGS, ZZT_SHARK_NAME);
  } else if(type == ZZT_BEAR) {
    return new ZZT_BEAR_CLASS(type, x, y, ZZT_BEAR_SHAPE, ZZT_BEAR_FLAGS, ZZT_BEAR_NAME);
  } else if(type == ZZT_RUFFIAN) {
    return new ZZT_RUFFIAN_CLASS(type, x, y, ZZT_RUFFIAN_SHAPE, ZZT_RUFFIAN_FLAGS, ZZT_RUFFIAN_NAME);
  } else if(type == ZZT_TIGER) {
    return new ZZT_TIGER_CLASS(type, x, y, ZZT_TIGER_SHAPE, ZZT_TIGER_FLAGS, ZZT_TIGER_NAME);
  } else if(type == ZZT_SPINNING_GUN) {
    return new ZZT_SPINNING_GUN_CLASS(type, x, y, ZZT_SPINNING_GUN_SHAPE, ZZT_SPINNING_GUN_FLAGS, ZZT_SPINNING_GUN_NAME);
  } else if(type == ZZT_CENTIPEDE_HEAD) {
    return new ZZT_CENTIPEDE_HEAD_CLASS(type, x, y, ZZT_CENTIPEDE_HEAD_SHAPE, ZZT_CENTIPEDE_HEAD_FLAGS, ZZT_CENTIPEDE_HEAD_NAME);
  } else if(type == ZZT_CENTIPEDE_BODY) {
    return new ZZT_CENTIPEDE_BODY_CLASS(type, x, y, ZZT_CENTIPEDE_BODY_SHAPE, ZZT_CENTIPEDE_BODY_FLAGS, ZZT_CENTIPEDE_BODY_NAME);
  } else {
    return NULL;
  }
}

ZZTObject *create_copy(ZZTObject *source) {
  if(source == NULL) {
    return NULL;

  } else if(source->type() == ZZT_PLAYER) {
    return new ZZT_PLAYER_CLASS(*(ZZT_PLAYER_CLASS *)source);
  } else if(source->type() == ZZT_OBJECT) {
    return new ZZT_OBJECT_CLASS(*(ZZT_OBJECT_CLASS *)source);
  } else if(source->type() == ZZT_PASSAGE) {
    return new ZZT_PASSAGE_CLASS(*(ZZT_PASSAGE_CLASS *)source);
  } else if(source->type() == ZZT_SLIDER_NS) {
    return new ZZT_SLIDER_NS_CLASS(*(ZZT_SLIDER_NS_CLASS *)source);
  } else if(source->type() == ZZT_SLIDER_EW) {
    return new ZZT_SLIDER_EW_CLASS(*(ZZT_SLIDER_EW_CLASS *)source);
  } else if(source->type() == ZZT_PUSHER) {
    return new ZZT_PUSHER_CLASS(*(ZZT_PUSHER_CLASS *)source);
  } else if(source->type() == ZZT_KEY) {
    return new ZZT_KEY_CLASS(*(ZZT_KEY_CLASS *)source);
  } else if(source->type() == ZZT_GEM) {
    return new ZZT_GEM_CLASS(*(ZZT_GEM_CLASS *)source);
  } else if(source->type() == ZZT_TORCH) {
    return new ZZT_TORCH_CLASS(*(ZZT_TORCH_CLASS *)source);
  } else if(source->type() == ZZT_AMMO) {
    return new ZZT_AMMO_CLASS(*(ZZT_AMMO_CLASS *)source);
  } else if(source->type() == ZZT_SCROLL) {
    return new ZZT_SCROLL_CLASS(*(ZZT_SCROLL_CLASS *)source);
  } else if(source->type() == ZZT_ENERGIZER) {
    return new ZZT_ENERGIZER_CLASS(*(ZZT_ENERGIZER_CLASS *)source);
  } else if(source->type() == ZZT_DOOR) {
    return new ZZT_DOOR_CLASS(*(ZZT_DOOR_CLASS *)source);
  } else if(source->type() == ZZT_CONVEYER_CW) {
    return new ZZT_CONVEYER_CW_CLASS(*(ZZT_CONVEYER_CW_CLASS *)source);
  } else if(source->type() == ZZT_CONVEYER_CCW) {
    return new ZZT_CONVEYER_CCW_CLASS(*(ZZT_CONVEYER_CCW_CLASS *)source);
  } else if(source->type() == ZZT_BOMB) {
    return new ZZT_BOMB_CLASS(*(ZZT_BOMB_CLASS *)source);
  } else if(source->type() == ZZT_EXPLOSION) {
    return new ZZT_EXPLOSION_CLASS(*(ZZT_EXPLOSION_CLASS *)source);
  } else if(source->type() == ZZT_BULLET) {
    return new ZZT_BULLET_CLASS(*(ZZT_BULLET_CLASS *)source);
  } else if(source->type() == ZZT_DUPLICATOR) {
    return new ZZT_DUPLICATOR_CLASS(*(ZZT_DUPLICATOR_CLASS *)source);
  } else if(source->type() == ZZT_TRANSPORTER) {
    return new ZZT_TRANSPORTER_CLASS(*(ZZT_TRANSPORTER_CLASS *)source);
  } else if(source->type() == ZZT_BOULDER) {
    return new ZZT_BOULDER_CLASS(*(ZZT_BOULDER_CLASS *)source);
  } else if(source->type() == ZZT_EMPTY) {
    return new ZZT_EMPTY_CLASS(*(ZZT_EMPTY_CLASS *)source);
  } else if(source->type() == ZZT_BREAKABLE) {
    return new ZZT_BREAKABLE_CLASS(*(ZZT_BREAKABLE_CLASS *)source);
  } else if(source->type() == ZZT_LINE) {
    return new ZZT_LINE_CLASS(*(ZZT_LINE_CLASS *)source);
  } else if(source->type() == ZZT_SOLID) {
    return new ZZT_SOLID_CLASS(*(ZZT_SOLID_CLASS *)source);
  } else if(source->type() == ZZT_NORMAL) {
    return new ZZT_NORMAL_CLASS(*(ZZT_NORMAL_CLASS *)source);
  } else if(source->type() == ZZT_FAKE) {
    return new ZZT_FAKE_CLASS(*(ZZT_FAKE_CLASS *)source);
  } else if(source->type() == ZZT_FOREST) {
    return new ZZT_FOREST_CLASS(*(ZZT_FOREST_CLASS *)source);
  } else if(source->type() == ZZT_INVISIBLE) {
    return new ZZT_INVISIBLE_CLASS(*(ZZT_INVISIBLE_CLASS *)source);
  } else if(source->type() == ZZT_WATER) {
    return new ZZT_WATER_CLASS(*(ZZT_WATER_CLASS *)source);
  } else if(source->type() == ZZT_BLINK) {
    return new ZZT_BLINK_CLASS(*(ZZT_BLINK_CLASS *)source);
  } else if(source->type() == ZZT_HORIZONTAL_BLINK) {
    return new ZZT_HORIZONTAL_BLINK_CLASS(*(ZZT_HORIZONTAL_BLINK_CLASS *)source);
  } else if(source->type() == ZZT_VERTICAL_BLINK) {
    return new ZZT_VERTICAL_BLINK_CLASS(*(ZZT_VERTICAL_BLINK_CLASS *)source);
  } else if(source->type() == ZZT_BLUE_TEXT) {
    return new ZZT_BLUE_TEXT_CLASS(*(ZZT_BLUE_TEXT_CLASS *)source);
  } else if(source->type() == ZZT_GREEN_TEXT) {
    return new ZZT_GREEN_TEXT_CLASS(*(ZZT_GREEN_TEXT_CLASS *)source);
  } else if(source->type() == ZZT_CYAN_TEXT) {
    return new ZZT_CYAN_TEXT_CLASS(*(ZZT_CYAN_TEXT_CLASS *)source);
  } else if(source->type() == ZZT_RED_TEXT) {
    return new ZZT_RED_TEXT_CLASS(*(ZZT_RED_TEXT_CLASS *)source);
  } else if(source->type() == ZZT_PURPLE_TEXT) {
    return new ZZT_PURPLE_TEXT_CLASS(*(ZZT_PURPLE_TEXT_CLASS *)source);
  } else if(source->type() == ZZT_YELLOW_TEXT) {
    return new ZZT_YELLOW_TEXT_CLASS(*(ZZT_YELLOW_TEXT_CLASS *)source);
  } else if(source->type() == ZZT_WHITE_TEXT) {
    return new ZZT_WHITE_TEXT_CLASS(*(ZZT_WHITE_TEXT_CLASS *)source);
  } else if(source->type() == ZZT_LION) {
    return new ZZT_LION_CLASS(*(ZZT_LION_CLASS *)source);
  } else if(source->type() == ZZT_SHARK) {
    return new ZZT_SHARK_CLASS(*(ZZT_SHARK_CLASS *)source);
  } else if(source->type() == ZZT_BEAR) {
    return new ZZT_BEAR_CLASS(*(ZZT_BEAR_CLASS *)source);
  } else if(source->type() == ZZT_RUFFIAN) {
    return new ZZT_RUFFIAN_CLASS(*(ZZT_RUFFIAN_CLASS *)source);
  } else if(source->type() == ZZT_TIGER) {
    return new ZZT_TIGER_CLASS(*(ZZT_TIGER_CLASS *)source);
  } else if(source->type() == ZZT_SPINNING_GUN) {
    return new ZZT_SPINNING_GUN_CLASS(*(ZZT_SPINNING_GUN_CLASS *)source);
  } else if(source->type() == ZZT_CENTIPEDE_HEAD) {
    return new ZZT_CENTIPEDE_HEAD_CLASS(*(ZZT_CENTIPEDE_HEAD_CLASS *)source);
  } else if(source->type() == ZZT_CENTIPEDE_BODY) {
    return new ZZT_CENTIPEDE_BODY_CLASS(*(ZZT_CENTIPEDE_BODY_CLASS *)source);
  } else {
    return NULL;
  }
}
